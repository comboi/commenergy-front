/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/community-contracts/community/{communityId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunityContractsController_getCommunityContracts"];
        put?: never;
        post: operations["CommunityContractsController_createCommunityContract"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community-contracts/community/{communityId}/contract/{communityContractId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunityContractsController_getCommunityContract"];
        put: operations["CommunityContractsController_updateContract"];
        post?: never;
        delete: operations["CommunityContractsController_deleteContract"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/documents/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Uploads a single file */
        post: operations["DocumentsController_createDocument"];
        delete: operations["DocumentsController_deleteDocument"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/terms-agreements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["TermsAgreementsController_getAllTermsAgreements"];
        put?: never;
        post: operations["TermsAgreementsController_createTermsAgreement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/terms-agreements/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["TermsAgreementsController_getTermsAgreementById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["HealthController_run"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsersController_getUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["UsersController_register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UsersController_me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_run"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contracts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ContractsController_getContracts"];
        put?: never;
        post: operations["ContractsController_createContract"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contracts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ContractsController_getContract"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/contracts/{id}/terms-agreements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["ContractsController_acceptTermsCommunityTermsAgreement"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/communities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunitiesController_getUsersCommunities"];
        put: operations["CommunitiesController_updateCommunity"];
        post: operations["CommunitiesController_createCommunity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/communities/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunitiesController_getCommunity"];
        put?: never;
        post?: never;
        delete: operations["CommunitiesController_deleteCommunity"];
        options?: never;
        head?: never;
        patch: operations["CommunitiesController_patchCommunity"];
        trace?: never;
    };
    "/communities/{id}/user-request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunitiesRequestsController_getUserRequests"];
        put?: never;
        post: operations["CommunitiesRequestsController_createUserRequestCommunity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/communities/{id}/user-request/{userId}/accept": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["CommunitiesRequestsController_acceptUserRequest"];
        trace?: never;
    };
    "/communities/{id}/contract-request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["CommunitiesRequestsController_getContractRequests"];
        put?: never;
        post: operations["CommunitiesRequestsController_requestToAddContractToCommunity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/communities/{communityId}/contract-request/{contractId}/accept": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["CommunitiesRequestsController_AcceptRequestContractToCommunity"];
        trace?: never;
    };
    "/energy-providers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["EnergyProviderController_getEnergyProvidersReq"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CommunityContractDto: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            contractId: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            communityId: string;
            /** @example 2023-01-01 */
            communityJoinDate?: Record<string, never> | null;
            /**
             * @description Community share percentage
             * @example 0.15
             */
            communityShare?: Record<string, never> | null;
            /**
             * @description Community fee amount
             * @example 50
             */
            communityFee?: Record<string, never> | null;
            /** @enum {string|null} */
            communityFeePeriodType?: "Monthly" | "Quarterly" | "Semiannually" | "Yearly" | null;
            /** @example I agree to the terms and conditions */
            termsAgreement: string;
        };
        CommunityContract: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            contractId: string;
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            communityId: string;
            /** @example 2023-03-23T10:00:00.000Z */
            communityJoinDate: string | null;
            /**
             * @description Community share percentage
             * @example 50
             */
            communityShare: number | null;
            /**
             * @description Community fee amount
             * @example 100
             */
            communityFee: number | null;
            /**
             * @example Monthly
             * @enum {string|null}
             */
            communityFeePeriodType: "Monthly" | "Quarterly" | "Semiannually" | "Yearly" | null;
            /** @example Terms and conditions agreement text */
            termsAgreement: string | null;
        };
        UserResponse: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example ES12345678A */
            vat: string;
            /** @example +34600123456 */
            mobile: string;
            /** @example user@example.com */
            email: string;
            /** @example John Doe */
            name: string;
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status: "ACTIVE" | "INACTIVE" | "PENDING_TO_CLAIM";
        };
        EnergyProvider: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example Iberdrola */
            name: string;
            /** @example iberdrola */
            code: string;
            /** @example B1231231 */
            vat: string;
        };
        ContractEnriched: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example 2023-10-01T00:00:00.000Z */
            createdAt: string;
            /** @example Contract Name */
            name: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            providerId: string;
            /** @example ES1234567890123456 */
            cups: string;
            /**
             * @example CONSUMPTION
             * @enum {string}
             */
            contractType: "CONSUMPTION" | "GENERATION";
            /** @example 100 */
            contractPower: number | null;
            /**
             * @example Active
             * @enum {string}
             */
            state: "Active" | "Inactive";
            /** @example 123 Main St, Anytown, USA */
            fullAddress: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            userId: string;
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            communityContracts: string[];
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            contractsCommunitiesRequests: string[];
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            dataSources: string[];
            /** @example 73400963Z */
            userVat: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            user: components["schemas"]["UserResponse"];
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            provider: components["schemas"]["EnergyProvider"];
        };
        CommunityContractEnriched: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /** @example {
             *       "id": "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *       "createdAt": "2023-10-01T00:00:00.000Z",
             *       "name": "Contract Name",
             *       "provider": "Provider Name",
             *       "cups": "ES1234567890123456",
             *       "contractType": "CONSUMPTION",
             *       "contractPower": 100,
             *       "state": "Active",
             *       "fullAddress": "123 Main St, Anytown, USA",
             *       "user": {
             *         "id": "123e4567-e89b-12d3-a456-426614174000",
             *         "vat": "ES12345678A",
             *         "mobile": "+34600123456",
             *         "email": "user@email.com",
             *         "name": "John Doe"
             *       },
             *       "communityContracts": [],
             *       "contractsCommunitiesRequests": [],
             *       "dataSources": []
             *     } */
            contract: components["schemas"]["ContractEnriched"];
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            communityId: string;
            /** @example 2023-03-23T10:00:00.000Z */
            communityJoinDate: string | null;
            /**
             * @description Community share percentage
             * @example 50
             */
            communityShare: number | null;
            /**
             * @description Community fee amount
             * @example 100
             */
            communityFee: number | null;
            /**
             * @example Monthly
             * @enum {string|null}
             */
            communityFeePeriodType: "Monthly" | "Quarterly" | "Semiannually" | "Yearly" | null;
            /** @example Terms and conditions agreement text */
            termsAgreement: string | null;
        };
        Document: {
            /** @example document.pdf */
            name: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example https://example.com/document.pdf */
            url: string;
            /** @example media123 */
            mediaId: string;
        };
        TermsAgreementDto: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string;
            /** @example [
             *       "550e8400-e29b-41d4-a716-446655440000"
             *     ] */
            documents: string[];
            /** @example 2012-07-14T01:00:00+01:00 */
            acceptanceDate: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            userId: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            userVat: string;
        };
        CreateUserDto: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /** @example johndoe@email.com */
            email: string;
            /** @example 7311413M */
            vat: string;
            /** @example 666666666 */
            mobile: string;
            /** @example John Doe */
            name: string;
            /** @example mySecretPassword33 */
            password: string;
        };
        User: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example ES12345678A */
            vat: string;
            /** @example +34600123456 */
            mobile: string;
            /** @example user@example.com */
            email: string;
            /** @example John Doe */
            name: string;
            /** @example password123 */
            password: string;
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status: "ACTIVE" | "INACTIVE" | "PENDING_TO_CLAIM";
        };
        LoginDto: {
            /** @example johndoe@email.com */
            email: string;
            /** @example password */
            password: string;
        };
        ContractDto: {
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            id: string;
            /** @example 2023-01-01T00:00:00.000Z */
            createdAt: string;
            /** @example Oficina Commenergy */
            name: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            providerId: string;
            /** @example ES0021000000000000AA */
            cups: string;
            /**
             * @example CONSUMPTION
             * @enum {string}
             */
            contractType: "CONSUMPTION" | "GENERATION";
            /**
             * @description Contract power in kW
             * @example 10
             */
            contractPower?: number;
            /**
             * @example Active
             * @enum {string}
             */
            state: "Active" | "Inactive";
            /** @example Carrer de la Marina, 16 */
            fullAddress: string;
            /** @example 550e8400-e29b-41d4-a716-446655440000 */
            user: string;
            /** @example [] */
            communityContracts: string[];
            /** @example [] */
            contractsCommunitiesRequests: string[];
            /** @example [] */
            dataSources: string[];
            /** @example 73400963Z */
            userVat: string;
        };
        Contract: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example 2023-10-01T00:00:00.000Z */
            createdAt: string;
            /** @example Contract Name */
            name: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            providerId: string;
            /** @example ES1234567890123456 */
            cups: string;
            /**
             * @example CONSUMPTION
             * @enum {string}
             */
            contractType: "CONSUMPTION" | "GENERATION";
            /** @example 100 */
            contractPower: number | null;
            /**
             * @example Active
             * @enum {string}
             */
            state: "Active" | "Inactive";
            /** @example 123 Main St, Anytown, USA */
            fullAddress: string;
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            userId: string;
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            communityContracts: string[];
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            contractsCommunitiesRequests: string[];
            /** @example [
             *       "123e4567-e89b-12d3-a456-426614174000"
             *     ] */
            dataSources: string[];
            /** @example 73400963Z */
            userVat: string;
        };
        TermsAgreement: {
            /** @example 123e4567-e89b-12d3-a456-426614174000 */
            id: string;
            /** @example 2023-10-01T12:00:00Z */
            acceptanceDate: string;
            /** @example ES12345678A */
            userVat: string;
            /** @example [
             *       "doc1",
             *       "doc2"
             *     ] */
            documents: string[];
        };
        CreateCommunityDto: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /** @example CEL CommEnergy */
            name: string;
            /** @example Commenergy is a placeholder community description */
            description: string;
            /** @example 100 */
            power: number;
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status: "PENDING_TO_BE_CONSTITUTED" | "CONSTITUTED" | "ACTIVE" | "INACTIVE";
            /** @example ES123123123123123123FF123 */
            locationCode: string;
            /** @example [
             *       "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *       "c12d7b7a-f7a2-4e38-8e06-27649a84c727"
             *     ] */
            energySourceType: string[];
        };
        Community: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /** @example CEL CommEnergy */
            name: string;
            /** @example Commenergy is a placeholder community description */
            description: Record<string, never>;
            /**
             * @description Power in kW
             * @example 100
             */
            power: Record<string, never>;
            /** @example 2023-03-23T10:00:00.000Z */
            createdAt: string;
            /**
             * @example SOLAR
             * @enum {string}
             */
            energySourceType: "SOLAR" | "WIND" | "HYDRO" | "THERMAL" | "BIO";
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status: "PENDING_TO_BE_CONSTITUTED" | "CONSTITUTED" | "ACTIVE" | "INACTIVE";
            /** @example [
             *       {
             *         "userId": "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *         "communityId": "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *         "role": "admin"
             *       }
             *     ] */
            users: string[];
            /** @example ES123123123123123123123123 */
            locationCode: Record<string, never>;
            /**
             * @description Array of legal document ids
             * @example [
             *       "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *       "c12d7b7a-f7a2-4e38-8e06-27649a84c727"
             *     ]
             */
            legalDocuments: string[];
            /**
             * @description Array of community contract ids
             * @example [
             *       "c6cd7b7a-f7a2-4e38-8e06-27649a84c727",
             *       "c12d7b7a-f7a2-4e38-8e06-27649a84c727"
             *     ]
             */
            communityContracts: string[];
        };
        UpdateCommunityDto: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id: string;
            /** @example CEL CommEnergy */
            name: string;
            /** @example Commenergy is a placeholder community description */
            description: string;
            /** @example 100 */
            power: number;
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status: "PENDING_TO_BE_CONSTITUTED" | "CONSTITUTED" | "ACTIVE" | "INACTIVE";
            /** @example ES123123123123123123FF123 */
            locationCode: string;
        };
        PatchCommunityDto: {
            /**
             * Format: uuid
             * @example c6cd7b7a-f7a2-4e38-8e06-27649a84c727
             */
            id?: string;
            /** @example CEL CommEnergy */
            name?: string;
            /** @example Commenergy is a placeholder community description */
            description?: string;
            /** @example 100 */
            power?: number;
            /**
             * @example ACTIVE
             * @enum {string}
             */
            status?: "PENDING_TO_BE_CONSTITUTED" | "CONSTITUTED" | "ACTIVE" | "INACTIVE";
            /** @example ES123123123123123123FF123 */
            locationCode?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    CommunityContractsController_getCommunityContracts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommunityContractEnriched"][];
                };
            };
        };
    };
    CommunityContractsController_createCommunityContract: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CommunityContractDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommunityContract"];
                };
            };
        };
    };
    CommunityContractsController_getCommunityContract: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
                communityContractId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommunityContractEnriched"];
                };
            };
        };
    };
    CommunityContractsController_updateContract: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
                communityContractId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommunityContract"];
                };
            };
        };
    };
    CommunityContractsController_deleteContract: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
                communityContractId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DocumentsController_createDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /** Format: binary */
                    file?: string;
                };
            };
        };
        responses: {
            /** @description The document has been successfully uploaded. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Document"];
                };
            };
        };
    };
    DocumentsController_deleteDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The document has been successfully deleted. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    TermsAgreementsController_getAllTermsAgreements: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved all terms agreements. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TermsAgreementDto"][];
                };
            };
        };
    };
    TermsAgreementsController_createTermsAgreement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TermsAgreementDto"];
            };
        };
        responses: {
            /** @description Successfully created a new terms agreement. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TermsAgreementDto"];
                };
            };
        };
    };
    TermsAgreementsController_getTermsAgreementById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved the terms agreement by ID. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TermsAgreementDto"];
                };
            };
        };
    };
    HealthController_run: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_getUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The user has been successfully created. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"][];
                };
            };
        };
    };
    UsersController_register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserDto"];
            };
        };
        responses: {
            /** @description The user has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    UsersController_me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved the user by ID. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponse"];
                };
            };
        };
    };
    AuthController_run: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ContractsController_getContracts: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of contracts. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"][];
                };
            };
        };
    };
    ContractsController_createContract: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ContractDto"];
            };
        };
        responses: {
            /** @description The contract has been successfully created. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contract"];
                };
            };
        };
    };
    ContractsController_getContract: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Contract */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ContractEnriched"][];
                };
            };
        };
    };
    ContractsController_acceptTermsCommunityTermsAgreement: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TermsAgreementDto"];
            };
        };
        responses: {
            /** @description Terms and agreements have been successfully accepted. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TermsAgreement"];
                };
            };
        };
    };
    CommunitiesController_getUsersCommunities: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Community"][];
                };
            };
        };
    };
    CommunitiesController_updateCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateCommunityDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Community"];
                };
            };
        };
    };
    CommunitiesController_createCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCommunityDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Community"];
                };
            };
        };
    };
    CommunitiesController_getCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Community"];
                };
            };
        };
    };
    CommunitiesController_deleteCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesController_patchCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PatchCommunityDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Community"];
                };
            };
        };
    };
    CommunitiesRequestsController_getUserRequests: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesRequestsController_createUserRequestCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesRequestsController_acceptUserRequest: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesRequestsController_getContractRequests: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesRequestsController_requestToAddContractToCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommunitiesRequestsController_AcceptRequestContractToCommunity: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                communityId: string;
                contractId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    EnergyProviderController_getEnergyProvidersReq: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Energy providers */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnergyProvider"][];
                };
            };
        };
    };
}
